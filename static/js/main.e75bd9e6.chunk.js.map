{"version":3,"sources":["api.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/LoadingError/LoadingError.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","json","getTodos","getUser","userId","TodoItem","todo","setSelectedTodo","selectedTodo","className","cn","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","searchQuery","setSearchQuery","selectedOption","setSelectedOption","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","setTodo","useState","user","setUser","isLoading","setIsLoading","a","userFromServer","useEffect","fetchUser","href","email","name","LoadingError","loading","loadTodos","App","setTodos","hasLoadingError","setHasLoadingError","fetchTodos","todosFromServer","filteredTodosByOption","filter","toLowerCase","search","trim","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e75bd9e6.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${fullURL}, received ${res.status}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoItem: FC<Props> = ({\n  todo,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': todo === selectedTodo,\n      })}\n    >\n      <td className=\"is-vcentered\">\n        {todo.id}\n      </td>\n\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': todo !== selectedTodo,\n              'fa-eye-slash': todo === selectedTodo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  setSelectedTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          setSelectedTodo={setSelectedTodo}\n          selectedTodo={selectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Props {\n  searchQuery: string;\n  setSearchQuery: (searchQuery: string) => void;\n  selectedOption: string;\n  setSelectedOption: (selectedOption: string) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  searchQuery,\n  setSearchQuery,\n  selectedOption,\n  setSelectedOption,\n}) => {\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const clearSearchInput = () => {\n    setSearchQuery('');\n  };\n\n  const selectOption = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedOption(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={selectOption}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={searchQuery}\n          onChange={handleSearch}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear search\"\n              onClick={clearSearchInput}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface Props {\n  todo: Todo;\n  setTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: FC<Props> = ({ todo, setTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const closeTodoModal = () => {\n    setTodo(null);\n  };\n\n  async function fetchUser() {\n    try {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchUser();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Close modal\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  loading: boolean;\n  loadTodos: () => void;\n}\n\nexport const LoadingError: FC<Props> = ({ loading, loadTodos }) => (\n  <div>\n    <p className=\"notification is-danger is-light\">\n      An error occured when loading todos!\n    </p>\n\n    <button\n      className={cn('button is-link', {\n        'is-loading': loading,\n      })}\n      type=\"button\"\n      onClick={loadTodos}\n    >\n      Try again\n    </button>\n  </div>\n);\n","/* eslint-disable max-len */\nimport { FC, useState, useEffect } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { LoadingError } from './components/LoadingError';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedOption, setSelectedOption] = useState<string>('all');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hasLoadingError, setHasLoadingError] = useState<boolean>(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  async function fetchTodos() {\n    setIsLoading(true);\n\n    try {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setHasLoadingError(true);\n    }\n  }\n\n  const filteredTodos = todos.filter(todo => {\n    const title = todo.title.toLowerCase();\n    const search = searchQuery.toLowerCase().trim();\n\n    return title.includes(search);\n  });\n\n  const filteredTodosByOption = filteredTodos.filter(todo => {\n    switch (selectedOption) {\n      case 'all':\n        return todo;\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                selectedOption={selectedOption}\n                setSelectedOption={setSelectedOption}\n              />\n            </div>\n\n            <div className=\"block\">\n              {/* eslint-disable-next-line no-nested-ternary */}\n              {isLoading ? (\n                <Loader />\n              ) : (\n                // create a new component called LoadingError\n                // if the request fails, render the LoadingError component\n                // that will display a message and a button to retry\n                hasLoadingError ? (\n                  <LoadingError\n                    loading={isLoading}\n                    loadTodos={() => fetchTodos}\n                  />\n                ) : (\n                  <TodoList\n                    todos={filteredTodosByOption}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}